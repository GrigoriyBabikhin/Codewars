/*Просто, учитывая строку слов, верните длину
самого короткого слова (слов).*/

function findShort(s) {
    const words = s.split(' '); // Разбиваем строку на массив слов.

    let lengthWords = []; // Создаем пустой массив для хранения длин каждого слова.
    console.log(lengthWords); // Выводим в консоль пустой массив (для отладки).

    let minimumNumber = Infinity; // Инициализируем переменную минимальной длины значением бесконечности.

    for (let i = 0; i < words.length; i++) {
        lengthWords.push(words[i].length); // Заполняем массив длинами каждого слова.
        if (lengthWords[i] < minimumNumber) {
            minimumNumber = lengthWords[i]; // Обновляем минимальное значение при необходимости.
        }
    }
    return minimumNumber; // Возвращаем минимальную длину слова.
}

console.log(findShort("Let's travel abroad shall we")); // Вызываем функцию и выводим результат в консоль.



/*
function findShort(s){
    return Math.min(...s.split(" ").map (s => s.length));
} */


/*
Этот код использует несколько встроенных методов JavaScript для компактного нахождения длины
самого короткого слова в предоставленной строке:
s.split(" "): Этот метод разбивает строку s на массив слов, используя пробел как разделитель.
Получившийся массив слов сохраняется в s.split(" ").
.map(s => s.length): Этот метод применяет функцию к каждому элементу массива, в данном случае,
к каждому слову. Функция s => s.length возвращает длину каждого слова. Таким образом, мы получаем массив длин слов.
Math.min(...массивДлин): Этот код использует распыление (spread syntax) для передачи всех элементов массива длин в
функцию Math.min(). Таким образом, Math.min(...массивДлин) возвращает минимальное значение из массива длин.
Таким образом, весь код возвращает длину самого короткого слова в предоставленной строке.*/
